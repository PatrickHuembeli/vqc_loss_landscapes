# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"X": "01_torchcirq.ipynb",
         "Y": "01_torchcirq.ipynb",
         "Z": "01_torchcirq.ipynb",
         "unity": "01_torchcirq.ipynb",
         "cz": "01_torchcirq.ipynb",
         "R1": "01_torchcirq.ipynb",
         "R3": "01_torchcirq.ipynb",
         "CZ": "01_torchcirq.ipynb",
         "Measurements": "01_torchcirq.ipynb",
         "Measurement_Z": "01_torchcirq.ipynb",
         "flatten_grad": "01_torchcirq.ipynb",
         "find_hessian": "01_torchcirq.ipynb",
         "find_heigenvalues": "01_torchcirq.ipynb",
         "loss_function": "01_torchcirq.ipynb",
         "batch_loss_function_sigmoid": "01_torchcirq.ipynb",
         "batch_loss_function": "01_torchcirq.ipynb",
         "Toy_Model": "01_torchcirq.ipynb",
         "General_Model": "01_torchcirq.ipynb",
         "Model_Z_measure": "01_torchcirq.ipynb",
         "make_complex": "02_complex.ipynb",
         "numpy": "02_complex.ipynb",
         "real": "02_complex.ipynb",
         "imag": "02_complex.ipynb",
         "scalar_mult": "02_complex.ipynb",
         "matmul": "02_complex.ipynb",
         "inner_prod": "02_complex.ipynb",
         "outer_prod": "02_complex.ipynb",
         "einsum": "02_complex.ipynb",
         "conjugate": "02_complex.ipynb",
         "conj": "02_complex.ipynb",
         "elementwise_mult": "02_complex.ipynb",
         "elementwise_division": "02_complex.ipynb",
         "absolute_value": "02_complex.ipynb",
         "kronecker_prod": "02_complex.ipynb",
         "sigmoid": "02_complex.ipynb",
         "scalar_divide": "02_complex.ipynb",
         "inverse": "02_complex.ipynb",
         "norm_sqr": "02_complex.ipynb",
         "norm": "02_complex.ipynb",
         "I": "02_complex.ipynb",
         "iterate_minibatches": "04_data_helper.ipynb",
         "rot_layer": "03_pennylanecirq.ipynb",
         "entangle_layer": "03_pennylanecirq.ipynb",
         "Reuploading_model": "03_pennylanecirq.ipynb",
         "Hessian": "03_pennylanecirq.ipynb",
         "generate_circle_data": "04_data_helper.ipynb",
         "step": "05_hess_vs_metrictensor.ipynb",
         "apply_grad": "05_hess_vs_metrictensor.ipynb",
         "Setup_For_Training": "05_hess_vs_metrictensor.ipynb"}

modules = ["torchcirq.py",
           "complex.py",
           "pennylanecirq.py",
           "data_helper.py",
           "hess_vs_metrictensor.py"]

doc_url = "https://PatrickHuembeli.github.io/vqc_loss_landscapes/"

git_url = "https://github.com/PatrickHuembeli/vqc_loss_landscapes/tree/master/"

def custom_doc_links(name): return None
